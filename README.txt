We propose an integration of adversarial autoencoders and machine learning methods to perform an objective classification among three transaction types: regular, local, and global anomaly. The integration consists of using the autoencoder's generated latent vectors as features for the supervised learning algorithms. The experiments considered different latent vector space forms concerning their dimensionality and the clusters generated by a prior Gaussian mixture. The results show that some classifiers may accept latent characteristics well, getting better or similar performance when using all the original characteristics.
1. validation_v0.py -> train an autoencoder
2. generateDatasets -> generate datasets from the generated latent spaces
(first get the raw link for each model at github origin)

after running these two routines, one can run:

1. MAUC_Exp.py # use latent vectors as features
2. MAUC_rawExp.py # run using the original features (618 in total)

